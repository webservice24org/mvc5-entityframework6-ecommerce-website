@model Mohiuddin_EcommerceWebsite.Models.ViewModels.ProductViewModel

@{
    ViewBag.Title = "Edit Product";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductId)
    @Html.HiddenFor(model => model.ImageUrl)

    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h2>Edit Product</h2>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label class="">Product Title</label>
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", style = "min-height: 250px;" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.ImageFile, new { @class = "control-label" })
                            <div>
                                <input type="file" class="form-control" name="ImageFile" onchange="readUrl(this)" />
                                @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <img src="@Url.Content(Model.ImageUrl)" id="imageFile" class="img-thumbnail" style="max-width:200px;" />
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-success btn-lg" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <div class="form-group">
                        <h5>Product Quantity</h5>
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <h6>Product Status (Active/Inactive)</h6>
                            <label>
                                @Html.CheckBoxFor(model => model.IsActive)
                                @Html.LabelFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <h5>Product Price</h5>
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <h5>Select Brand</h5>
                        @Html.DropDownListFor(model => model.BrandId, new SelectList(Model.Brands, "BrandId", "BrandName"), "Select Brand", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <h5>Select Category</h5>
                        @Html.DropDownListFor(model => model.ProductCategoryId, new SelectList(Model.ProductCategories, "ProductCategoryId", "CategoryName"), "Select Category", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductCategoryId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <h5>Select Sub Category</h5>
                        @Html.DropDownListFor(model => model.ProductSubCategoryId, new SelectList(Model.ProductSubCategories, "ProductSubCategoryId", "SubCategoryName"), "Select SubCategory", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductSubCategoryId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <h4>Select Unit</h4>
                        @Html.DropDownListFor(model => model.UnitId, new SelectList(Model.Units, "UnitId", "UnitName"), "Select Unit", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <h5>Select Supplier</h5>
                        @Html.DropDownListFor(model => model.ProductSupplierId, new SelectList(Model.ProductSuppliers, "ProductSupplierId", "SupplierName"), "Select Supplier", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductSupplierId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <h5>Select Discount</h5>
                        @Html.DropDownListFor(model => model.DiscountId, new SelectList(Model.Discounts, "DiscountId", "Name"), "Select Discount (optional)", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DiscountId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}

<script>
    function readUrl(input) {
        if (input.files && input.files[0]) {
            var rdr = new FileReader();
            rdr.onload = function (e) {
                $('#imageFile').attr('src', e.target.result);
            };
            rdr.readAsDataURL(input.files[0]);
        }
    }
</script>
