@model List<Mohiuddin_EcommerceWebsite.Models.CartItem>
@{
    ViewBag.Title = "Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="breadcrumb-section bg-danger">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb__text">
                    <h2>Shopping Cart</h2>
                    <div class="breadcrumb__option">
                        <a href="/">Home</a>
                        <span>Shopping Cart</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="shoping-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="shoping__cart__table">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th class="shoping__product">Product Image</th>
                                <th>Product Name</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr class="shoping__cart__item" data-item-id="@item.CartItemId">
                                    <td><img src="@Url.Content(item.ProductImage)" alt="@item.ProductName" width="50" height="50" /></td>
                                    <td>@item.ProductName</td>
                                    <td>@String.Format("TK {0:N2}", item.Price)</td>
                                    <td>
                                        <button class="minus-btn" data-id="@item.CartItemId">-</button>
                                        <input type="text" class="qty-input" style="width:50px;" value="@item.Quantity" readonly />
                                        <button class="plus-btn" data-id="@item.CartItemId">+</button>
                                    </td>
                                    <td class="item-total">@String.Format("TK {0:N2}", item.Price * item.Quantity)</td>
                                    <td>
                                        <button class="btn btn-danger btn-sm remove-from-cart" data-id="@item.CartItemId">Remove</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="shoping__cart__btns">
                    <a href="@Url.Action("Shop", "Home")" class="primary-btn cart-btn">CONTINUE SHOPPING</a>
                    <a href="#" class="primary-btn cart-btn cart-btn-right">
                        <span class="icon_loading"></span>
                        Update Cart
                    </a>
                </div>
            </div>
            <div class="col-lg-6">
            </div>
            <div class="col-lg-6">
                <div class="shoping__checkout">
                    <h5>Cart Total</h5>
                    <ul>
                        <li>Subtotal <span id="subtotal">TK 0.00</span></li>
                        <li>Total <span id="total">TK 0.00</span></li>
                    </ul>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a href="@Url.Action("PlaceOrder", "Order")" class="btn btn-primary">Proceed To CheckOut</a>
                    }
                    else
                    {
                        <a href="@Url.Action("Login", "Account", new { returnUrl = Url.Action("PlaceOrder", "Order") })" class="btn btn-primary">Login to Place Order</a>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<script src="~/Scripts/jquery-3.7.1.js"></script>
<script>
$(document).ready(function () {
    // Update the cart totals when the page loads
    updateCartTotal();

    $(document).on('click', '.plus-btn', function () {
        var itemId = $(this).data('id');
        var input = $(this).siblings('.qty-input');
        var currentVal = parseInt(input.val());
        input.val(currentVal + 1);
        updateCartItem(itemId, currentVal + 1);
    });

    $(document).on('click', '.minus-btn', function () {
        var itemId = $(this).data('id');
        var input = $(this).siblings('.qty-input');
        var currentVal = parseInt(input.val());
        if (currentVal > 1) {
            input.val(currentVal - 1);
            updateCartItem(itemId, currentVal - 1);
        }
    });

    function updateCartItem(itemId, quantity) {
        $.ajax({
            url: '@Url.Action("UpdateCartItem", "Cart")',
            type: 'POST',
            data: { cartItemId: itemId, quantity: quantity },
            success: function (response) {
                if (response.success) {
                    toastr.success('Cart updated successfully.');
                    $('#subtotal').text('TK ' + response.subtotal.toFixed(2));
                    $('#total').text('TK ' + response.total.toFixed(2));
                    var itemTotalElem = $('.shoping__cart__item[data-item-id="' + itemId + '"] .item-total');
                    itemTotalElem.text('TK ' + (quantity * response.itemPrice).toFixed(2));
                } else {
                    toastr.error('Failed to update cart.');
                }
            },
            error: function () {
                toastr.error('Failed to update cart.');
            }
        });
    }

    function refreshCartSummary() {
        $.ajax({
            url: '@Url.Action("GetCartSummary", "Cart")',
            type: 'GET',
            success: function (response) {
                $('#cart-item-count').text(response.itemCount);
                $('#cart-total-price').text('TK ' + response.totalPrice.toFixed(2));
            },
            error: function () {
                toastr.error('Failed to refresh cart summary.');
            }
        });
    }

    $('.remove-from-cart').click(function () {
        var cartItemId = $(this).data('id');
        $.ajax({
            url: '@Url.Action("RemoveFromCart", "Cart")',
            type: 'POST',
            data: { cartItemId: cartItemId },
            success: function (response) {
                if (response.success) {
                    $(this).closest('tr').remove();
                    toastr.success('Item removed from cart.');
                    updateCartTotal();
                } else {
                    toastr.error('There was an error removing the product from the cart.');
                }
            }.bind(this),
            error: function () {
                toastr.error('There was an error removing the product from the cart.');
            }
        });
    });

     function updateCartTotal() {
        $.ajax({
            url: '@Url.Action("GetCartTotal", "Cart")',
            type: 'GET',
            success: function (response) {
                $('#subtotal').text('TK ' + response.subtotal.toFixed(2));
                $('#total').text('TK ' + response.total.toFixed(2));
            },
            error: function () {
                toastr.error('Failed to update cart total.');
            }
        });
    }
});
</script>
